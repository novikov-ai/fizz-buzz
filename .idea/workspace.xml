<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6b561fc6-964c-4c11-9df9-048bb1fd9c51" name="Changes" comment="add makefile" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/Cellar/go/1.21.5/libexec" />
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Alexander Novikov &lt;nvkv_ai@outlook.com&gt;" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2cG59u4E40MFx5a63jUlT0rf47K" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "configurable.GoLibrariesConfigurable.is.expanded": "true",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/ainovikov/Documents/github/fizz-buzz",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "go.sdk"
  },
  "keyToStringList": {
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "TEXT"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/zero-ifs" />
      <recent name="$PROJECT_DIR$/classic" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/implementations" />
      <recent name="$PROJECT_DIR$/internal" />
      <recent name="$PROJECT_DIR$/contract" />
    </key>
  </component>
  <component name="RunManager" selected="Makefile Target.all">
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="fizz-buzz" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="Test_FizzBuzz in fizz-buzz/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="fizz-buzz" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="fizz-buzz/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_FizzBuzz\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_FizzBuzz/classic in fizz-buzz/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="fizz-buzz" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="fizz-buzz/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_FizzBuzz\E$/^\Qclassic\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_FizzBuzz/without_IF in fizz-buzz/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="fizz-buzz" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="fizz-buzz/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_FizzBuzz\E$/^\Qwithout_IF\E$" />
      <method v="2" />
    </configuration>
    <configuration name="all" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="all" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Makefile Target.all" />
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Go Test.Test_FizzBuzz in fizz-buzz/tests" />
        <item itemvalue="Go Test.Test_FizzBuzz/classic in fizz-buzz/tests" />
        <item itemvalue="Go Test.Test_FizzBuzz/without_IF in fizz-buzz/tests" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="add gitignore" />
    <MESSAGE value="init" />
    <MESSAGE value="add tests" />
    <MESSAGE value="add classic variant" />
    <MESSAGE value="add no-ifs variant" />
    <MESSAGE value="clean up" />
    <MESSAGE value="add readme" />
    <MESSAGE value="add makefile" />
    <option name="LAST_COMMIT_MESSAGE" value="add makefile" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>